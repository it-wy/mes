{"version":3,"file":"js/1588.2bde0231.js","mappings":"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","sources":["webpack://data-v2/./src/views/setting/screen-design/components/ScreenCanvas.vue?50a6","webpack://data-v2/src/views/setting/screen-design/components/ScreenCanvas.vue","webpack://data-v2/./src/views/setting/screen-design/components/ScreenCanvas.vue?d02a","webpack://data-v2/./src/views/setting/screen-design/components/ScreenCanvas.vue"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"screen-canvas-container\"},[_c('div',{ref:\"screenCanvas\",staticClass:\"screen-canvas\",style:(_vm.canvasStyle)},[_c('div',{staticClass:\"grid-background\"}),_vm._l((_vm.charts),function(chart,index){return [_c('div',{key:chart.id,staticClass:\"chart-item\",class:{ 'selected': _vm.selectedChartIndex === index },style:(_vm.getChartStyle(chart)),on:{\"mousedown\":function($event){return _vm.startDrag($event, chart, index)},\"click\":function($event){$event.stopPropagation();return _vm.selectChart(chart, index)}}},[_c('div',{ref:\"chartContainer\",refInFor:true,staticClass:\"chart-container\",attrs:{\"id\":chart.id}})])]})],2)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"screen-canvas-container\">\r\n    <div class=\"screen-canvas\" \r\n         :style=\"canvasStyle\"\r\n         ref=\"screenCanvas\">\r\n      <!-- 网格背景 -->\r\n      <div class=\"grid-background\"></div>\r\n      \r\n      <!-- 图表组件区域 -->\r\n      <template v-for=\"(chart, index) in charts\">\r\n        <div :key=\"chart.id\"\r\n             class=\"chart-item\"\r\n             :class=\"{ 'selected': selectedChartIndex === index }\"\r\n             :style=\"getChartStyle(chart)\"\r\n             @mousedown=\"startDrag($event, chart, index)\"\r\n             @click.stop=\"selectChart(chart, index)\">\r\n          <div ref=\"chartContainer\" :id=\"chart.id\" class=\"chart-container\"></div>\r\n        </div>\r\n      </template>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport elementResizeDetectorMaker from 'element-resize-detector'\r\n\r\nexport default {\r\n  name: 'ScreenCanvas',\r\n  data() {\r\n    return {\r\n      charts: [],\r\n      chartInstances: {},\r\n      erd: null,\r\n      selectedChartIndex: -1,\r\n      isDragging: false,\r\n      dragStartX: 0,\r\n      dragStartY: 0,\r\n      dragChart: null\r\n    }\r\n  },\r\n  computed: {\r\n    canvasStyle() {\r\n      return {\r\n        width: '100%',\r\n        height: '100%',\r\n        transformOrigin: '0 0',\r\n        backgroundColor: '#0d2a42'\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initResizeDetector()\r\n  },\r\n  methods: {\r\n    initResizeDetector() {\r\n      this.erd = elementResizeDetectorMaker()\r\n    },\r\n    \r\n    // 添加图表\r\n    addChart(chartConfig) {\r\n      const chartId = 'chart_' + Date.now()\r\n      this.charts.push({\r\n        id: chartId,\r\n        ...chartConfig\r\n      })\r\n      this.$nextTick(() => {\r\n        this.initChart(chartId, chartConfig)\r\n      })\r\n    },\r\n    \r\n    // 初始化图表\r\n    initChart(chartId, config) {\r\n      const dom = document.getElementById(chartId)\r\n      if (!dom) return\r\n      \r\n      const chart = echarts.init(dom)\r\n      this.chartInstances[chartId] = chart\r\n      \r\n      // 监听容器大小变化\r\n      this.erd.listenTo(dom, () => {\r\n        chart.resize()\r\n      })\r\n      \r\n      // 设置图表配置\r\n      chart.setOption(config.option)\r\n    },\r\n    \r\n    // 获取图表样式\r\n    getChartStyle(chart) {\r\n      return {\r\n        position: 'absolute',\r\n        left: chart.x + 'px',\r\n        top: chart.y + 'px',\r\n        width: chart.width + 'px',\r\n        height: chart.height + 'px'\r\n      }\r\n    },\r\n    \r\n    // 选中图表\r\n    selectChart(chart, index) {\r\n      this.selectedChartIndex = index\r\n      this.$emit('select-chart', { chart, index })\r\n    },\r\n\r\n    // 开始拖拽\r\n    startDrag(event, chart, index) {\r\n      this.isDragging = true\r\n      this.dragChart = chart\r\n      this.selectedChartIndex = index\r\n      \r\n      // 获取画布元素的位置和实际缩放比例\r\n      const canvasRect = this.$refs.screenCanvas.getBoundingClientRect()\r\n      \r\n      // 计算鼠标相对于图表的偏移量\r\n      this.dragStartX = event.clientX - (canvasRect.left + chart.x)\r\n      this.dragStartY = event.clientY - (canvasRect.top + chart.y)\r\n      \r\n      // 添加全局事件监听\r\n      document.addEventListener('mousemove', this.onDrag)\r\n      document.addEventListener('mouseup', this.stopDrag)\r\n      \r\n      // 发送选中事件\r\n      this.$emit('select-chart', { chart, index })\r\n    },\r\n    \r\n    // 拖拽中\r\n    onDrag(event) {\r\n      if (!this.isDragging || !this.dragChart) return\r\n      \r\n      // 获取画布元素的位置和实际缩放比例\r\n      const canvasRect = this.$refs.screenCanvas.getBoundingClientRect()\r\n      \r\n      // 计算新位置，考虑画布的偏移量\r\n      const newX = event.clientX - canvasRect.left - this.dragStartX\r\n      const newY = event.clientY - canvasRect.top - this.dragStartY\r\n      \r\n      // 更新图表位置，确保不超出画布边界\r\n      this.dragChart.x = Math.max(0, Math.round(newX))\r\n      this.dragChart.y = Math.max(0, Math.round(newY))\r\n      \r\n      // 通知父组件位置变化\r\n      this.$emit('update-chart-position', {\r\n        chart: this.dragChart,\r\n        index: this.selectedChartIndex\r\n      })\r\n    },\r\n    \r\n    // 停止拖拽\r\n    stopDrag() {\r\n      this.isDragging = false\r\n      document.removeEventListener('mousemove', this.onDrag)\r\n      document.removeEventListener('mouseup', this.stopDrag)\r\n    },\r\n\r\n    // 更新图表数据\r\n    updateChartData(chartId, data) {\r\n      const chart = this.chartInstances[chartId]\r\n      if (chart) {\r\n        const option = chart.getOption()\r\n        // 更新数据系列\r\n        option.series.forEach(series => {\r\n          series.data = data\r\n        })\r\n        chart.setOption(option)\r\n      }\r\n    },\r\n\r\n    // 重新调整图表大小\r\n    resizeChart(chartId) {\r\n      const chart = this.chartInstances[chartId]\r\n      if (chart) {\r\n        chart.resize()\r\n      }\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    // 销毁图表实例\r\n    Object.values(this.chartInstances).forEach(chart => {\r\n      chart.dispose()\r\n    })\r\n    // 清除监听\r\n    if (this.erd) {\r\n      this.erd.removeAllListeners(this.$refs.screenCanvas)\r\n    }\r\n    // 移除全局事件监听\r\n    document.removeEventListener('mousemove', this.onDrag)\r\n    document.removeEventListener('mouseup', this.stopDrag)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.screen-canvas-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #151515;\r\n  \r\n  .screen-canvas {\r\n    position: relative;\r\n    margin: 20px;\r\n    box-shadow: 0 0 20px rgba(0,0,0,0.3);\r\n    \r\n    .grid-background {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      background-size: 20px 20px;\r\n      background-image: linear-gradient(to right, rgba(255,255,255,.1) 1px, transparent 1px),\r\n                        linear-gradient(to bottom, rgba(255,255,255,.1) 1px, transparent 1px);\r\n    }\r\n    \r\n    .chart-item {\r\n      position: absolute;\r\n      background: rgba(255,255,255,0.05);\r\n      border: 1px solid rgba(255,255,255,0.1);\r\n      box-sizing: border-box;\r\n      cursor: move;\r\n      \r\n      &:hover {\r\n        border-color: #1890ff;\r\n      }\r\n      \r\n      &.selected {\r\n        border: 2px solid #1890ff;\r\n        z-index: 10;\r\n      }\r\n      \r\n      .chart-container {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> ","import mod from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScreenCanvas.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScreenCanvas.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ScreenCanvas.vue?vue&type=template&id=200f151c&scoped=true\"\nimport script from \"./ScreenCanvas.vue?vue&type=script&lang=js\"\nexport * from \"./ScreenCanvas.vue?vue&type=script&lang=js\"\nimport style0 from \"./ScreenCanvas.vue?vue&type=style&index=0&id=200f151c&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"200f151c\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","ref","style","_l","chart","index","key","id","class","selectedChartIndex","getChartStyle","on","$event","startDrag","stopPropagation","selectChart","refInFor","attrs","staticRenderFns","name","data","charts","chartInstances","erd","isDragging","dragStartX","dragStartY","dragChart","computed","canvasStyle","width","height","transformOrigin","backgroundColor","mounted","initResizeDetector","methods","addChart","chartConfig","chartId","Date","now","push","$nextTick","initChart","config","dom","document","getElementById","echarts","listenTo","resize","setOption","option","position","left","x","top","y","$emit","event","canvasRect","$refs","screenCanvas","getBoundingClientRect","clientX","clientY","addEventListener","onDrag","stopDrag","newX","newY","Math","max","round","removeEventListener","updateChartData","getOption","series","forEach","resizeChart","beforeDestroy","Object","values","dispose","removeAllListeners","component"],"sourceRoot":""}