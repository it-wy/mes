"use strict";(self["webpackChunkdata_v2"]=self["webpackChunkdata_v2"]||[]).push([[3203],{63203:function(t,e,i){i.r(e),i.d(e,{default:function(){return d}});var a=function(){var t=this,e=t._self._c;return e("a-spin",{attrs:{spinning:t.loading}},[e("a-form-model",{ref:"form",attrs:{model:t.entity,rules:t.rules,autocomplete:"off",layout:"vertical"}},[e("div",{staticClass:"card"},[e("a-row",{attrs:{gutter:24}},[e("a-col",{attrs:{sm:12}},[e("a-form-model-item",{attrs:{label:"日期",prop:"date"}},[e("a-date-picker",{staticStyle:{width:"100%"},attrs:{placeholder:"选择日期","value-format":"YYYY-MM-DD"},on:{change:t.dateChange},model:{value:t.entity.date,callback:function(e){t.$set(t.entity,"date",e)},expression:"entity.date"}})],1)],1),e("a-col",{attrs:{sm:12}},[e("a-form-model-item",{attrs:{label:"是否工作日",prop:"isWorkDay"}},[e("a-switch",{on:{change:t.onWorkDayChange},model:{value:t.entity.isWorkDay,callback:function(e){t.$set(t.entity,"isWorkDay",e)},expression:"entity.isWorkDay"}})],1)],1)],1),t.entity.isWorkDay?e("a-row",{attrs:{gutter:24}},[e("a-col",{attrs:{sm:24}},[e("a-form-model-item",{attrs:{label:"班次"}},[t._l(t.entity.shifts,(function(i,a){return e("div",{key:a,staticClass:"shift-item"},[e("a-time-picker",{attrs:{placeholder:"开始时间","value-format":"HH:mm"},on:{change:function(e){return t.shiftTimeChange(a)}},model:{value:i.startTime,callback:function(e){t.$set(i,"startTime",e)},expression:"shift.startTime"}}),e("a-time-picker",{attrs:{placeholder:"结束时间","value-format":"HH:mm"},on:{change:function(e){return t.shiftTimeChange(a)}},model:{value:i.endTime,callback:function(e){t.$set(i,"endTime",e)},expression:"shift.endTime"}}),e("a-input",{staticStyle:{width:"120px"},attrs:{placeholder:"班次名称"},model:{value:i.name,callback:function(e){t.$set(i,"name",e)},expression:"shift.name"}}),e("a-button",{attrs:{type:"danger",icon:"delete"},on:{click:function(e){return t.removeShift(a)}}})],1)})),e("a-button",{attrs:{type:"dashed",icon:"plus"},on:{click:t.addShift}},[t._v("添加班次")])],2)],1)],1):t._e(),t.entity.isWorkDay?t._e():e("a-row",{attrs:{gutter:24}},[e("a-col",{attrs:{sm:24}},[e("a-form-model-item",{attrs:{label:"停机时间"}},[t._l(t.entity.downtime,(function(i,a){return e("div",{key:a,staticClass:"downtime-item"},[e("a-time-picker",{attrs:{placeholder:"开始时间","value-format":"HH:mm"},model:{value:i.startTime,callback:function(e){t.$set(i,"startTime",e)},expression:"item.startTime"}}),e("a-time-picker",{attrs:{placeholder:"结束时间","value-format":"HH:mm"},model:{value:i.endTime,callback:function(e){t.$set(i,"endTime",e)},expression:"item.endTime"}}),e("a-input",{staticStyle:{width:"150px"},attrs:{placeholder:"原因"},model:{value:i.reason,callback:function(e){t.$set(i,"reason",e)},expression:"item.reason"}}),e("a-button",{attrs:{type:"danger",icon:"delete"},on:{click:function(e){return t.removeDowntime(a)}}})],1)})),e("a-button",{attrs:{type:"dashed",icon:"plus"},on:{click:t.addDowntime}},[t._v("添加停机时间")])],2)],1)],1),e("a-row",{attrs:{gutter:24}},[e("a-col",{attrs:{sm:24}},[e("a-form-model-item",{attrs:{label:"备注",prop:"remark"}},[e("a-textarea",{attrs:{placeholder:"备注",rows:4,"max-length":1e3},model:{value:t.entity.remark,callback:function(e){t.$set(t.entity,"remark",e)},expression:"entity.remark"}})],1)],1)],1)],1),e("g-collapse",{attrs:{headerName:"其他信息"},scopedSlots:t._u([{key:"content",fn:function(){return[e("a-row",{attrs:{gutter:24}},[e("a-col",{attrs:{sm:6}},[e("a-form-model-item",{attrs:{label:"创建人"}},[e("span",[t._v("admin")])])],1),e("a-col",{attrs:{sm:6}},[e("a-form-model-item",{attrs:{label:"修改时间"}},[e("span",[t._v(" 2025-04-20 15:00")])])],1)],1),e("a-row",{attrs:{gutter:24}},[e("a-col",{attrs:{sm:24}},[e("a-form-model-item",{attrs:{label:"例外情况"}},[t._l(t.entity.exceptions,(function(i,a){return e("div",{key:a,staticClass:"exception-item"},[e("a-date-picker",{attrs:{placeholder:"选择日期","value-format":"YYYY-MM-DD"},model:{value:i.date,callback:function(e){t.$set(i,"date",e)},expression:"item.date"}}),e("a-select",{staticStyle:{width:"120px"},attrs:{placeholder:"类型"},model:{value:i.type,callback:function(e){t.$set(i,"type",e)},expression:"item.type"}},[e("a-select-option",{attrs:{value:"overtime"}},[t._v("加班")]),e("a-select-option",{attrs:{value:"shutdown"}},[t._v("停工")])],1),e("a-input",{attrs:{placeholder:"原因"},model:{value:i.reason,callback:function(e){t.$set(i,"reason",e)},expression:"item.reason"}}),e("a-button",{attrs:{type:"danger",icon:"delete"},on:{click:function(e){return t.removeException(a)}}})],1)})),e("a-button",{attrs:{type:"dashed",icon:"plus"},on:{click:t.addException}},[t._v("添加例外情况")])],2)],1)],1)]},proxy:!0}])})],1)],1)},s=[],n=i(36026),r={name:"CreateOrEditWorkCalendar",mixins:[n.GE],data(){return{entity:{date:null,isWorkDay:!0,remark:"",shifts:[],downtime:[],exceptions:[]},rules:{date:[{required:!0,message:"请选择日期",trigger:"change"}]},isNew:!0}},watch:{id:{handler(t){this.isNew=!t},immediate:!0}},methods:{async init(){if(this.loading=!0,this.id)try{const t=await getWorkCalendarById(this.id);if(t&&t.data){if(this.entity={...t.data},this.entity.isWorkDay){const t=await getShiftsByDate(this.entity.date);this.entity.shifts=t.data||[]}const e=await getDowntimeByDate(this.entity.date);this.entity.downtime=e.data||[];const i=await getExceptionsByDate(this.entity.date);this.entity.exceptions=i.data||[]}else this.$message.error("获取工作日历详情失败")}catch(t){console.error("获取工作日历详情出错:",t),this.$message.error("获取工作日历详情出错")}finally{this.loading=!1}else this.reset(),this.loading=!1},resetFormData(){this.entity={date:null,isWorkDay:!0,remark:"",shifts:[],downtime:[],exceptions:[]}},async save(){let t=await this.checkError();if(t){if(this.entity.isWorkDay)for(let t=0;t<this.entity.shifts.length;t++)for(let e=t+1;e<this.entity.shifts.length;e++)if(this.entity.shifts[t].startTime<this.entity.shifts[e].endTime&&this.entity.shifts[e].startTime<this.entity.shifts[t].endTime)return void this.$message.error("班次时间不能重叠");this.loading=!0;try{if(this.isNew){const t=await createWorkCalendar(this.entity);this.id=t.data.id,this.entity.isWorkDay?await createShifts(this.entity.date,this.entity.shifts):await createDowntime(this.entity.date,this.entity.downtime),await createExceptions(this.entity.exceptions),this.$message.success("创建成功")}else await updateWorkCalendar(this.id,this.entity),this.entity.isWorkDay?await updateShifts(this.entity.date,this.entity.shifts):await updateDowntime(this.entity.date,this.entity.downtime),await updateExceptions(this.entity.exceptions),this.$message.success("更新成功");this.saveSuccess(this.entity.date),this.handleSaveEndBackView(this.id),this.refreshParent({reset:null})}catch(e){console.error("保存工作日历出错:",e),this.$message.error("保存失败")}finally{this.loading=!1}}},dateChange(t,e){if(t){let e=new Date(t).getDay();this.entity.isWorkDay=0!==e&&6!==e,this.onWorkDayChange(this.entity.isWorkDay)}},onWorkDayChange(t){t?(this.entity.downtime=[],0===this.entity.shifts.length&&this.addShift()):this.entity.shifts=[]},addShift(){this.entity.shifts.push({name:"",startTime:null,endTime:null})},removeShift(t){this.entity.shifts.splice(t,1)},shiftTimeChange(t){this.entity.shifts.sort(((t,e)=>t.startTime<e.startTime?-1:t.startTime>e.startTime?1:0))},addDowntime(){this.entity.downtime.push({startTime:null,endTime:null,reason:""})},removeDowntime(t){this.entity.downtime.splice(t,1)},addException(){this.entity.exceptions.push({date:null,type:"",reason:""})},removeException(t){this.entity.exceptions.splice(t,1)}}},o=r,l=i(1001),c=(0,l.Z)(o,a,s,!1,null,"b5806b56",null),d=c.exports}}]);
//# sourceMappingURL=3203.e5c16a66.js.map